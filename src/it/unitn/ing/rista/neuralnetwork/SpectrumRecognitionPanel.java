/*
 * @(#)SpectrumRecognitionPanel.java created Mar 23, 2006 Casalino
 *
 * Copyright (c) 1996-2004 Luca Lutterotti All Rights Reserved.
 *
 * This software is the research result of Luca Lutterotti and it is 
 * provided as it is as confidential and proprietary information.  
 * You shall not disclose such Confidential Information and shall use 
 * it only in accordance with the terms of the license agreement you 
 * entered into with the author.
 *
 * THE AUTHOR MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY OF THE
 * SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
 * PURPOSE, OR NON-INFRINGEMENT. THE AUTHOR SHALL NOT BE LIABLE FOR ANY DAMAGES
 * SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING OR DISTRIBUTING
 * THIS SOFTWARE OR ITS DERIVATIVES.
 *
 */

package it.unitn.ing.rista.neuralnetwork;

import org.joone.engine.NeuralNetListener;

import javax.swing.*;
import java.awt.*;


/**
 * The SpectrumRecognitionPanel is a class
 * <p/>
 * Description
 *
 * @author Luca Lutterotti
 * @version $Revision: 1.1 $, $Date: 2006/07/20 14:06:04 $
 * @since JDK1.1
 */

public class SpectrumRecognitionPanel extends javax.swing.JPanel {

  // Variables declaration - do not modify//GEN-BEGIN:variables
  // End of variables declaration//GEN-END:variables
  private static final int PREFERRED_WIDTH = 630;
  private static final int PREFERRED_HEIGHT = 500;

  private SpectrumRecognitionControlPanel spectrumRecognitionControlPanel;

    /** Creates new form SpectrumRecognitionPanel */
    public SpectrumRecognitionPanel() {
        initComponents();

        JPanel spectrumDrawingCanvasPanel = new JPanel();
        spectrumRecognitionControlPanel = new SpectrumRecognitionControlPanel();

        Dimension minimumSize = new Dimension((int)((double)PREFERRED_WIDTH/4.0),
            (int)((double)PREFERRED_HEIGHT/4.0));
        spectrumDrawingCanvasPanel.setMinimumSize(minimumSize);
        spectrumRecognitionControlPanel.setMinimumSize(minimumSize);

        JSplitPane splitPane = new JSplitPane(JSplitPane.HORIZONTAL_SPLIT,
            spectrumDrawingCanvasPanel, spectrumRecognitionControlPanel);

        splitPane.setDividerLocation(380);
        splitPane.setOneTouchExpandable(true);

        add(splitPane);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents

        setLayout(new java.awt.BorderLayout());

        setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(5, 5, 5, 5)));
    }//GEN-END:initComponents

    public Dimension getPreferredSize() {
        return new Dimension(PREFERRED_WIDTH, PREFERRED_HEIGHT);
    }

    public void updateInfo() {
        spectrumRecognitionControlPanel.updateInfo();
    }

    public NumberSpectrum getNumberSpectrum() {
        return getSpectrumScholarPanel().getNumberSpectrum();
    }

    public void clear() {
//        spectrumDrawingCanvasPanel.clear();
        spectrumRecognitionControlPanel.clear();
    }

    public NeuralNetListener getNeuralNetListener() {
        return spectrumRecognitionControlPanel;
    }
  ProjectEnvironment getProjectEnvironment() {
    return getSpectrumScholarPanel().getProjectEnvironment();
  }

  SpectrumScholarPanel getSpectrumScholarPanel() {
    Container aparent = getParent();
    while (aparent != null && !(aparent instanceof SpectrumScholarPanel)) {
      aparent = aparent.getParent();
    }
    if (aparent != null)
      return (SpectrumScholarPanel) aparent;
    else
      return null;
  }

}
